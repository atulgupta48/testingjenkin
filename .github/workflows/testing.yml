name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  Pipeline_exectuion:
    name: Pipeline_exectuion
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
     - run: echo "Pipeline submitted succeessfully"
   
  get_pipeline_arn:
    name: get_pipeline_run
    needs: Pipeline_exectuion
    runs-on: ubuntu-latest
    outputs:
      arn: $ {{ steps.Fetch_Arn.outputs.a }}
    steps:
    - uses: actions/checkout@v2
    - id: Fetch_Arn
      name: Fetch SagemakerArn
      run: |
        a= $(aws sagemaker list-pipeline-executions --pipeline-name AbalonePipeline --sort-by CreationTime --sort-order Descending --output json | jq .PipelineExecutionSummaries[].PipelineExecutionArn)
        echo $a
      env:
        AWS_ACCESS_KEY_ID: "AKIA4P7PEBNG2JHKC7SV"
        AWS_SECRET_ACCESS_KEY: "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"
    
  check_execution_status:
    name: Status check execution
    needs: get_pipeline_arn
    runs-on: ubuntu-latest
    steps:
    - name : get the status
      run: Aws dynamo db get item from table where excution arn = fetch arn.output varible and github run ID= $ github.runID
           if value blank insert item
           else if status is success  exit 0
           else exit 1
      
      
